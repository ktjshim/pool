= = = = = = = = = = = = = = = = = = = =
## Starting Time: 09-12 14:10:21
Namespace(dataset='huggingface', llm='Mistral-7B', llm_model_path='', seed=0, device='cuda:0', max_txt_length=512, max_ans_length=512, gnn_in_dim=1024, gnn_hidden_dim=1024, gnn_output_dim=4096, n_layers=2, gnn_type='SAGE', max_degree=300, num_epochs=2, batch_size=6, eval_batch_size=6, patience=2, lr=1e-05, wd=0.05, output_dir='output', grad_steps=4, name='diffpool')

[Training Data] # Chain Samples 1536 (51.20)
[Data Split] # Train 3000  # Test 500
# Train 2400   # Val 600   # Test 500
Loading checkpoint shards: 100%|█████████████████████████████████| 3/3 [00:01<00:00,  2.13it/s]
Finish loading pre-trained Mistral-7B model!
Trainable params 8466467 || all params 7250198563 || trainable% 0.11678
/nas/home/ktshim/tool/pool/graphtoken/../utils/datautil.py:24: RuntimeWarning: divide by zero encountered in power
  d_inv = np.power(row_sum, -0.5).flatten()
/nas/home/ktshim/tool/pool/graphtoken/../utils/datautil.py:19: UserWarning: torch.sparse.SparseTensor(indices, values, shape, *, device=) is deprecated.  Please use torch.sparse_coo_tensor(indices, values, shape, dtype=, device=). (Triggered internally at /pytorch/torch/csrc/utils/tensor_new.cpp:653.)
  return torch.sparse.FloatTensor(index, data, torch.Size(coo.shape))
  0%|                                                                  | 0/800 [00:00<?, ?it/s]W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0] Graph break from `Tensor.item()`, consider setting:
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]     torch._dynamo.config.capture_scalar_outputs = True
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0] or:
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]     env TORCHDYNAMO_CAPTURE_SCALAR_OUTPUTS=1
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0] to include these operations in the captured graph.
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0] Graph break: from user code at:
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]   File "/nas/home/ktshim/tool/pool/graphtoken/glm_diffpool.py", line 62, in encode_task_graph
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]     node_embeds = self.graph_tokenizer(task_graph.x, task_graph.edge_index)
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]   File "/nas/home/ktshim/tool/pool/graphtoken/gnn_diffpool.py", line 150, in forward
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]     x_embed_dense, mask = to_dense_batch(x_embed, batch)
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]   File "/home/ktshim/.local/lib/python3.12/site-packages/torch_geometric/experimental.py", line 117, in wrapper
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]     return func(*args, **kwargs)
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]   File "/home/ktshim/.local/lib/python3.12/site-packages/torch_geometric/utils/_to_dense_batch.py", line 104, in to_dense_batch
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]     batch_size = int(batch.max()) + 1
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]
W0912 15:10:39.158000 3811083 torch/_dynamo/variables/tensor.py:1047] [7/0]
Traceback (most recent call last):
  File "/nas/home/ktshim/tool/pool/graphtoken/main.py", line 138, in <module>
    loss, logits = model(batch, task_graph)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ktshim/.local/lib/python3.12/site-packages/torch/_dynamo/eval_frame.py", line 375, in __call__
    return super().__call__(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ktshim/.local/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1773, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ktshim/.local/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1784, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ktshim/.local/lib/python3.12/site-packages/torch/_dynamo/eval_frame.py", line 736, in compile_wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/ktshim/.local/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1773, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ktshim/.local/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1784, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nas/home/ktshim/tool/pool/graphtoken/glm_diffpool.py", line 84, in forward
    requests = self.tokenizer(samples["request"], add_special_tokens=False)
  File "/nas/home/ktshim/tool/pool/graphtoken/glm_diffpool.py", line 85, in torch_dynamo_resume_in_forward_at_84
    labels = self.tokenizer(samples["label"], add_special_tokens=False)
  File "/nas/home/ktshim/tool/pool/graphtoken/glm_diffpool.py", line 88, in torch_dynamo_resume_in_forward_at_85
    eos_tokens = self.tokenizer(self.EOS, add_special_tokens=False)
  File "/nas/home/ktshim/tool/pool/graphtoken/glm_diffpool.py", line 89, in torch_dynamo_resume_in_forward_at_88
    eos_user_tokens = self.tokenizer(self.EOS_USER, add_special_tokens=False)
  File "/nas/home/ktshim/tool/pool/graphtoken/glm_diffpool.py", line 90, in torch_dynamo_resume_in_forward_at_89
    bos_embeds = self.word_embedding(self.tokenizer(self.BOS, add_special_tokens=False, return_tensors='pt').input_ids[0].to(self.device))
  File "/nas/home/ktshim/tool/pool/graphtoken/glm_diffpool.py", line 106, in torch_dynamo_resume_in_forward_at_90
    input_embeds = torch.cat([bos_embeds, node_embeds, input_embeds], dim=0)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: expected Tensor as element 1 in argument 0, but got tuple
